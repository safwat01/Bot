import telebot  
from telebot import types  
import sqlite3  
import os  

BOT_TOKEN = os.getenv("BOT_TOKEN")  # Railway Variables ржерзЗржХрзЗ ржирзЗржмрзЗ  
bot = telebot.TeleBot(BOT_TOKEN)  

# тЬЕ Admin User ID  
ADMIN_ID = 6551628383    
REFERRAL_BONUS = 100  

# тЬЕ SQLite DB setup  
conn = sqlite3.connect("bot.db", check_same_thread=False)  
cursor = conn.cursor()  

# ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐ (ржПржХржмрж╛рж░ржЗ рж╣ржмрзЗ)  
cursor.execute("""  
CREATE TABLE IF NOT EXISTS users (  
    user_id INTEGER PRIMARY KEY,  
    balance INTEGER DEFAULT 0  
)  
""")  
conn.commit()  

# ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржпрзЛржЧ ржХрж░рж╛  
def add_balance(user_id, amount):  
    cursor.execute("INSERT OR IGNORE INTO users (user_id, balance) VALUES (?, 0)", (user_id,))  
    cursor.execute("UPDATE users SET balance = balance + ? WHERE user_id = ?", (amount, user_id))  
    conn.commit()  

# ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржЪрзЗржХ ржХрж░рж╛  
def get_balance(user_id):  
    cursor.execute("SELECT balance FROM users WHERE user_id = ?", (user_id,))  
    row = cursor.fetchone()  
    return row[0] if row else 0  

# ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржХрж╛ржЯрж╛рж░ ржлрж╛ржВрж╢ржи  
def deduct_balance(user_id, amount):  
    bal = get_balance(user_id)  
    if bal >= amount:  
        cursor.execute("UPDATE users SET balance = balance - ? WHERE user_id = ?", (amount, user_id))  
        conn.commit()  
        return True  
    return False  

# тЬЕ Start Command (Referral Support)  
@bot.message_handler(commands=['start'])  
def start(message):  
    user_id = message.from_user.id  
    args = message.text.split()  
    if len(args) > 1:  
        ref_id = args[1]  
        if str(user_id) != ref_id:  
            if get_balance(user_id) == 0:  
                add_balance(user_id, 0)  
                try:  
                    ref_id_int = int(ref_id)  
                    add_balance(ref_id_int, REFERRAL_BONUS)  
                    bot.send_message(ref_id_int, f"ЁЯОЙ ржЖржкржирж┐ ржкрзЗрзЯрзЗржЫрзЗржи {REFERRAL_BONUS} ржХрзЯрзЗржи рж░рзЗржлрж╛рж░рзЗрж▓ ржмрзЛржирж╛рж╕!")  
                except:  
                    pass  
            bot.send_message(user_id, "ЁЯОЙ рж░рзЗржлрж╛рж░рзЗрж▓ ржХрзЛржб рж╕рзНржмрзАржХрж╛рж░ рж╣рзЯрзЗржЫрзЗ, рж╕рзНржмрж╛ржЧрждржо!")  
        else:  
            bot.send_message(user_id, "тЪая╕П ржЖржкржирж┐ ржирж┐ржЬрзЗржХрзЗ рж░рзЗржлрж╛рж░рзЗрж▓ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи ржирж╛ред")  
    else:  
        if get_balance(user_id) == 0:  
            add_balance(user_id, 0)  

    # тЬЕ Main Menu Buttons  
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  
    btn1 = types.KeyboardButton("ЁЯУИ Views")  
    btn2 = types.KeyboardButton("тЭдя╕П Reactions")  
    btn3 = types.KeyboardButton("ЁЯСе Subscriber")  
    btn4 = types.KeyboardButton("ЁЯТ░ My Balance")  
    btn5 = types.KeyboardButton("ЁЯЖШ Support")  
    btn6 = types.KeyboardButton("ЁЯУд Referral")  
    btn7 = types.KeyboardButton("ЁЯТ╕ Transfer")  
    btn8 = types.KeyboardButton("ЁЯТ│ Buy Coins")  
    markup.add(btn1, btn2)  
    markup.add(btn3, btn4)  
    markup.add(btn5, btn6)  
    markup.add(btn7, btn8)  
    bot.send_message(user_id, "ЁЯСЛ рж╕рзНржмрж╛ржЧрждржо! ржирж┐ржЪрзЗрж░ ржорзЗржирзБ ржерзЗржХрзЗ ржПржХржЯрж┐ ржЕржкрж╢ржи ржмрзЗржЫрзЗ ржирж┐ржи:", reply_markup=markup)  

# тЬЕ Admin: Balance Add  
@bot.message_handler(commands=['addbalance'])  
def add_balance_command(message):  
    if message.from_user.id == ADMIN_ID:  
        try:  
            _, target_id, amount = message.text.split()  
            target_id = int(target_id)  
            amount = int(amount)  
            add_balance(target_id, amount)  
            bot.send_message(message.chat.id, f"тЬЕ {target_id} ржХрзЗ {amount} ржХрзЯрзЗржи ржпрзЛржЧ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред")  
            bot.send_message(target_id, f"ЁЯТ░ ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕рзЗ {amount} ржХрзЯрзЗржи ржЕрзНржпрж╛ржб ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ (Admin ржжрзНржмрж╛рж░рж╛)ред")  
        except:  
            bot.send_message(message.chat.id, "тЪая╕П ржмрзНржпржмрж╣рж╛рж░: /addbalance <user_id> <amount>")  
    else:  
        bot.send_message(message.chat.id, "тЭМ ржЖржкржирж┐ ржЕржирзБржорзЛржжрж┐ржд ржиржиред")  

# тЬЕ Views  
@bot.message_handler(func=lambda message: message.text == "ЁЯУИ Views")  
def views(message):  
    bot.send_message(message.chat.id, "ЁЯФЧ ржЖржкржирж╛рж░ ржкрзЛрж╕рзНржЯрзЗрж░ рж▓рж┐ржВржХ ржжрж┐ржи ржпрзЗржЯрж╛рждрзЗ ржнрж┐ржЙ ржмрж╛ржбрж╝рж╛рждрзЗ ржЪрж╛ржи:")  

# тЬЕ Reactions  
@bot.message_handler(func=lambda message: message.text == "тЭдя╕П Reactions")  
def reactions(message):  
    bot.send_message(message.chat.id, "ЁЯФЧ ржЖржкржирж╛рж░ ржкрзЛрж╕рзНржЯрзЗрж░ рж▓рж┐ржВржХ ржжрж┐ржи ржпрзЗржЯрж╛рждрзЗ рж░рж┐ржЕрзНржпрж╛ржХрж╢ржи ржмрж╛ржбрж╝рж╛рждрзЗ ржЪрж╛ржи:")  

# тЬЕ Subscriber  
@bot.message_handler(func=lambda message: message.text == "ЁЯСе Subscriber")  
def subscribers(message):  
    bot.send_message(message.chat.id, "ЁЯФЧ ржЖржкржирж╛рж░ ржЪрзНржпрж╛ржирзЗрж▓/ржЧрзНрж░рзБржк рж▓рж┐ржВржХ ржжрж┐ржи рж╕рж╛ржмрж╕рзНржХрзНрж░рж╛ржЗржмрж╛рж░ ржмрж╛ржбрж╝рж╛рждрзЗ:")  

# тЬЕ My Balance  
@bot.message_handler(func=lambda message: message.text == "ЁЯТ░ My Balance")  
def balance(message):  
    bal = get_balance(message.from_user.id)  
    bot.send_message(message.chat.id, f"ЁЯЖФ Your UserID: `{message.from_user.id}`\nЁЯТ░ ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕: {bal} Coins", parse_mode="Markdown")  

# тЬЕ Support  
@bot.message_handler(func=lambda message: message.text == "ЁЯЖШ Support")  
def support(message):  
    bot.send_message(message.chat.id, "ЁЯЖШ рж╕рж╛рж╣рж╛ржпрзНржпрзЗрж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: @safwat01")  

# тЬЕ Referral  
@bot.message_handler(func=lambda message: message.text == "ЁЯУд Referral")  
def referral(message):  
    bot_username = "tgsbs_RoBot"  
    user_id = message.from_user.id  
    link = f"https://t.me/{bot_username}?start={user_id}"  
    bot.send_message(message.chat.id, f"ЁЯУд ржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржВржХ:\n{link}\n\nржкрзНрж░рждрж┐ рж░рзЗржлрж╛рж░рзЗрж▓ ржП ржкрж╛ржмрзЗржи {REFERRAL_BONUS} ржХрзЯрзЗржиред")  

# тЬЕ Transfer (Send Coins)  
@bot.message_handler(func=lambda message: message.text == "ЁЯТ╕ Transfer")  
def transfer(message):  
    bot.send_message(message.chat.id, "ЁЯТ╕ ржХрзЯрзЗржи ржкрж╛ржарж╛рждрзЗ ржПржЗ ржлрж░ржорзНржпрж╛ржЯрзЗ рж▓рж┐ржЦрзБржи:\n`/transfer <user_id> <amount>`", parse_mode="Markdown")  

@bot.message_handler(commands=['transfer'])  
def transfer_command(message):  
    try:  
        _, target_id, amount = message.text.split()  
        sender_id = message.from_user.id  
        target_id = int(target_id)  
        amount = int(amount)  

        if sender_id == target_id:  
            bot.send_message(sender_id, "тЪая╕П ржирж┐ржЬрзЗржХрзЗ ржХрзЯрзЗржи ржкрж╛ржарж╛ржирзЛ ржпрж╛ржмрзЗ ржирж╛ред")  
            return  

        if deduct_balance(sender_id, amount):  
            add_balance(target_id, amount)  
            bot.send_message(sender_id, f"тЬЕ ржЖржкржирж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ {target_id} ржЗржЙржЬрж╛рж░ржХрзЗ {amount} ржХрзЯрзЗржи ржкрж╛ржарж┐рзЯрзЗржЫрзЗржиред")  
            bot.send_message(target_id, f"ЁЯТ░ ржЖржкржирж┐ {sender_id} ржерзЗржХрзЗ {amount} ржХрзЯрзЗржи ржкрзЗрзЯрзЗржЫрзЗржиред")  
        else:  
            bot.send_message(sender_id, "тЭМ ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржкрж░рзНржпрж╛ржкрзНржд ржирзЯред")  
    except:  
        bot.send_message(message.chat.id, "тЪая╕П ржмрзНржпржмрж╣рж╛рж░: /transfer <user_id> <amount>")  

# тЬЕ Buy Coins  
@bot.message_handler(func=lambda message: message.text == "ЁЯТ│ Buy Coins")  
def buy_coins(message):  
    bot.send_message(message.chat.id, "ЁЯТ│ ржХрзЯрзЗржи ржХрзЗржирж╛рж░ ржЬржирзНржп /buy рж▓рж┐ржЦрзБржи ржЕржержмрж╛ ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржкрзЛрж░рзНржЯрзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиред")  

# тЬЕ Fallback  
@bot.message_handler(func=lambda message: True)  
def fallback(message):  
    bot.send_message(message.chat.id, "тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржорзЗржирзБ ржерзЗржХрзЗ ржПржХржЯрж┐ ржмрзИржз ржЕржкрж╢ржи ржмрзЗржЫрзЗ ржирж┐ржиред")  

print("ЁЯдЦ Bot is running...")  
bot.polling()
